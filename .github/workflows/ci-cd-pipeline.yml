name: CI/CD Pipeline for OWASP Juice Shop

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions:
  contents: read
  actions: read
  security-events: write  # Permet d'écrire les événements de sécurité

jobs:
  setup-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Étape 1 : Vérification du dépôt
    - name: Checkout repository
      uses: actions/checkout@v3

    # Étape 2 : Télécharger et exécuter l'image Docker de Juice Shop
    - name: Pull and Run OWASP Juice Shop Docker Image
      run: |
        docker pull bkimminich/juice-shop
        docker run -d -p 3000:3000 --name juice-shop bkimminich/juice-shop

    # Étape 3 : Attendre que l'application soit prête
    - name: Wait for Juice Shop to be ready
      run: |
        for i in {1..10}; do
          if curl -s http://localhost:3000 > /dev/null; then
            echo "Juice Shop is ready!"
            exit 0
          fi
          echo "Waiting for Juice Shop to be ready..."
          sleep 5
        done
        echo "Juice Shop did not start in time."
        exit 1

    # Étape 4 : Vérification que l'application fonctionne
    - name: Verify Application is Running
      run: |
        curl -I http://localhost:3000

    # Étape 5 : Ajouter les tests de sécurité avec CodeQL (SAST)
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: javascript

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
  
        

  dast-scan:
    runs-on: ubuntu-latest
    needs: setup-and-deploy  # Cette étape dépend du job "setup-and-deploy"

    steps:
    # Étape 1 : Télécharger OWASP ZAP Docker Image
    - name: Pull OWASP ZAP Docker Image
      run: |
        docker pull zaproxy/zap-stable

    # Étape 2 : Lancer un scan avec OWASP ZAP
    - name: Perform DAST with OWASP ZAP
      run: |
        docker run --rm -v $(pwd):/zap/wrk:rw -t zaproxy/zap-stable zap-full-scan.py \
          -t http://localhost:3000 \
          -r zap-report.html \
          -d

    # Étape 3 : Sauvegarder le rapport
    - name: Upload DAST Report
      uses: actions/upload-artifact@v3
      with:
        name: DAST-Report
        path: zap-report.html
